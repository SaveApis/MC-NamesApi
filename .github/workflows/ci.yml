name: CI
on:
  push:
    paths:
      - src/**
      - tests/**
      - .github/workflows/**

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter@v7.3.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CSHARP: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITLEAKS: true
  build-csharp:
    name: Build (C#)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x
      - name: Cache
        uses: actions/cache@v4.2.2
        id: cache
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: dotnet-${{ hashFiles('**/*.csproj') }}

      - name: Setup Nuget Feeds
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} -n hangfire-pro -u ${{ secrets.HANGFIRE_PRO_USER }} -p ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} -n hangfire-ace -u ${{ secrets.HANGFIRE_ACE_USER }} -p ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source https://nuget.pkg.github.com/SaveApis/index.json -n github -u ${{ github.actor }} -p ${{ github.token }} --store-password-in-clear-text
      - name: Restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore .
      - name: Build
        run: dotnet build . --no-restore --nologo
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    needs: build-csharp
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x
      - name: Cache
        uses: actions/cache@v4.2.2
        id: cache
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: dotnet-${{ hashFiles('**/*.csproj') }}

      - name: Setup Nuget Feeds
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} -n hangfire-pro -u ${{ secrets.HANGFIRE_PRO_USER }} -p ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} -n hangfire-ace -u ${{ secrets.HANGFIRE_ACE_USER }} -p ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source https://nuget.pkg.github.com/SaveApis/index.json -n github -u ${{ github.actor }} -p ${{ github.token }} --store-password-in-clear-text
      - name: Restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore .
      - name: Build
        run: dotnet build . --no-restore --nologo
      - name: Test
        run: dotnet test --no-build --nologo --no-restore
  build-docker:
    name: Build (Docker)
    runs-on: ubuntu-latest
    needs: build-csharp
    permissions:
      contents: read
      packages: read
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Build
        uses: docker/build-push-action@v6.15.0
        with:
          push: false
          file: src/Backend/Dockerfile
          tags: registry.digitalocean.com/saveapis/mc-namesapi-backend:dev
          secrets: |
            hangfire_ace_url=${{ secrets.HANGFIRE_ACE_URL }}
            hangfire_ace_user=${{ secrets.HANGFIRE_ACE_USER }}
            hangfire_ace_token=${{ secrets.HANGFIRE_ACE_TOKEN }}
            hangfire_pro_url=${{ secrets.HANGFIRE_PRO_URL }}
            hangfire_pro_user=${{ secrets.HANGFIRE_PRO_USER }}
            hangfire_pro_token=${{ secrets.HANGFIRE_PRO_TOKEN }}
            github_user=${{ github.actor }}
            github_token=${{ github.token }}